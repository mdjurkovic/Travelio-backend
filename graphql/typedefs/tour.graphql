# Types
type Tour implements Timestamps {
    id: ID!
    name: String!
    description: String
    price: Int!
    departureDate: Date!
    returnDate: Date!
    nights: Int
    minPassengers: Int!
    maxPassengers: Int!
    passengers: [String]
    image: String
    destination: Destination
    guider: Guider

    # Interface required
    createdAt: Date!
    updatedAt: Date!
}

# Inputs
input TourCreateInput {
    name: String!
    price: Int!
    departureDate: Date!
    returnDate: Date!
    minPassengers: Int!
    maxPassengers: Int!
    image: Upload
    destination: ID!
    guider: ID
}

input TourUpdateInput {
    name: String
    description: String
    price: Int
    departureDate: Date
    returnDate: Date
    minPassengers: Int
    maxPassengers: Int
    passengers: [String]
    image: Upload
    destination: ID
    guider: ID
}

fragment TourFields on Tour {
    id
    name
    price
    returnDate
    departureDate
    minPassengers
    maxPassengers
    description
    guider {
        id
        name
    }
    destination {
        id
        name
    }
}
